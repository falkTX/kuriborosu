name: build

on: [push, pull_request]

env:
  CACHE_VERSION: 1
  DEBIAN_FRONTEND: noninteractive
  PAWPAW_SKIP_LTO: 1
  PAWPAW_SKIP_SAMPLERATE: 1
  PAWPAW_SKIP_TESTS: 1
  PAWPAW_VERSION: 90236be774b3d2d615f489815b7cafbe576feaf6

jobs:
  linux:
    strategy:
      matrix:
        target: [linux-x86_64]
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/PawPawBuilds
          key: ${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: install dependencies
        shell: bash
        run: |
          apt-get update -qq
          apt-get install -yqq autoconf automake build-essential curl cmake git libasound2-dev libdbus-1-dev libgl1-mesa-dev libglib2.0-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev xz-utils
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: bootstrap
        shell: bash
        run: |
          git clone https://github.com/DISTRHO/PawPaw.git
          git -C PawPaw checkout ${{ env.PAWPAW_VERSION }}
          ./PawPaw/bootstrap-common.sh ${{ matrix.target }} && ./PawPaw/.cleanup.sh ${{ matrix.target }}
      - name: build
        shell: bash
        run: |
          source PawPaw/local.env ${{ matrix.target }}
          ${CMAKE} -S . -B build -DCARLA_BUILD_STATIC:BOOL=TRUE
          cmake --build build -j
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: build/bin

  macos:
    strategy:
      matrix:
        target: [macos-universal]
    runs-on: macos-11
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/PawPawBuilds
          key: ${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: install dependencies
        shell: bash
        run: |
          brew install cmake git jq meson
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: bootstrap
        shell: bash
        run: |
          git clone https://github.com/DISTRHO/PawPaw.git
          git -C PawPaw checkout ${{ env.PAWPAW_VERSION }}
          ./PawPaw/bootstrap-common.sh ${{ matrix.target }} && ./PawPaw/.cleanup.sh ${{ matrix.target }}
      - name: build
        shell: bash
        run: |
          source PawPaw/local.env ${{ matrix.target }}
          ${CMAKE} -S . -B build -DCARLA_BUILD_STATIC:BOOL=TRUE
          cmake --build build -j
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: build/bin

  windows:
    strategy:
      matrix:
        target: [win32, win64]
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/PawPawBuilds
          key: ${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: install dependencies
        shell: bash
        run: |
          dpkg --add-architecture i386
          apt-get update -qq
          if [ '${{ matrix.target }}' == 'win32' ]; then
            apt-get install -yqq binutils-mingw-w64-i686 g++-mingw-w64-i686
          else
            apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64
          fi
          apt-get install -yqq autoconf automake curl cmake git mingw-w64 wine wine32 xz-utils
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: bootstrap
        shell: bash
        run: |
          git clone https://github.com/DISTRHO/PawPaw.git
          git -C PawPaw checkout ${{ env.PAWPAW_VERSION }}
          ./PawPaw/bootstrap-common.sh ${{ matrix.target }} && ./PawPaw/.cleanup.sh ${{ matrix.target }}
      - name: build
        shell: bash
        run: |
          source PawPaw/local.env ${{ matrix.target }}
          ${CMAKE} -S . -B build -DCARLA_BUILD_STATIC:BOOL=TRUE
          cmake --build build -j
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: build/bin
